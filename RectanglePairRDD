package GeoSpark;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;

import org.apache.spark.api.java.JavaPairRDD;
import org.apache.spark.api.java.function.PairFunction;

import scala.Tuple2;

import com.vividsolutions.jts.geom.Coordinate;
import com.vividsolutions.jts.geom.Envelope;
import com.vividsolutions.jts.geom.GeometryFactory;
import com.vividsolutions.jts.geom.Point;


public class RectanglePairRDD implements Serializable {
	private JavaPairRDD<Envelope,String> rectanglePairRDD;
	public RectanglePairRDD(JavaPairRDD<Envelope,String> rectanglePairRDD)
	{
		this.setRectanglePairRDD(rectanglePairRDD);
	}
	public JavaPairRDD<Envelope,ArrayList<Point>> ParseToPoint()
	{
		return this.rectanglePairRDD.mapToPair(new PairFunction<Tuple2<Envelope,String>,Envelope,ArrayList<Point>>()
				{

					public Tuple2<Envelope, ArrayList<Point>> call(Tuple2<Envelope, String> t)
					{
						List<String> resultListString= Arrays.asList(t._2().split(","));
						Iterator<String> targetIterator=resultListString.iterator();
						ArrayList<Point> resultList=new ArrayList<Point>();
						while(targetIterator.hasNext())
						{
							GeometryFactory fact = new GeometryFactory();
							Coordinate coordinate=new Coordinate(Double.parseDouble(targetIterator.next()),Double.parseDouble(targetIterator.next()));
							Point currentTarget=fact.createPoint(coordinate);
							resultList.add(currentTarget);
						}
						return new Tuple2<Envelope,ArrayList<Point>>(t._1(),resultList);
					}
					
				});
	}
	public JavaPairRDD<Envelope,ArrayList<Envelope>> ParseToRectangle()
	{
		return this.rectanglePairRDD.mapToPair(new PairFunction<Tuple2<Envelope,String>,Envelope,ArrayList<Envelope>>()
				{

					public Tuple2<Envelope, ArrayList<Envelope>> call(Tuple2<Envelope, String> t)
					{
						List<String> resultListString= Arrays.asList(t._2().split(","));
						Iterator<String> targetIterator=resultListString.iterator();
						ArrayList<Envelope> resultList=new ArrayList<Envelope>();
						while(targetIterator.hasNext())
						{
							Envelope currentTarget=new Envelope(Double.parseDouble(targetIterator.next()),Double.parseDouble(targetIterator.next()),Double.parseDouble(targetIterator.next()),Double.parseDouble(targetIterator.next()));
							resultList.add(currentTarget);
						}
						return new Tuple2<Envelope,ArrayList<Envelope>>(t._1(),resultList);
					}
					
				});
	}
	public void PersistOnFile(String OutputLocation)
	{
		this.rectanglePairRDD.saveAsTextFile(OutputLocation);
	}
	public JavaPairRDD<Envelope,String> getRectanglePairRDD() {
		return rectanglePairRDD;
	}
	public void setRectanglePairRDD(JavaPairRDD<Envelope,String> rectanglePairRDD) {
		this.rectanglePairRDD = rectanglePairRDD;
	}
}
